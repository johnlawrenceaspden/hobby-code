
(float (+ 1)) ; 1.0
(float (+ 1 1/4)) ; 1.25
(float (+ 1 1/4 1/16)) ; 1.3125
(float (+ 1 1/4 1/16 1/64)) ; 1.328125
(float (+ 1 1/4 1/16 1/64 1/256)) ; 1.3320312
(float (+ 1 1/4 1/16 1/64 1/256 1/1024)) ; 1.3330078

(take 7 (reductions + (iterate #(/ % 4) 1))) ; (1 5/4 21/16 85/64 341/256 1365/1024 5461/4096)

(float (+ 5 4/2 5/4 4/8 5/16 4/32 5/64 4/128 5/256 4/512 5/1024)) ; 9.329102

(map float
     (reductions +
                 (map * 
                      (apply concat (repeat [5 4]))
                      (iterate #(/ % 2) 1)))) ; (5.0 7.0 8.25 8.75 9.0625 9.1875 9.265625 9.296875 9.316406 9.324219 9.329102 9.331055 9.332275 9.332764 9.333069 9.333191 9.333267 9.333298 9.333317 9.333324 9.333329 9.333331 9.333332 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 9.333333 ...)

(map float
     (reductions +
                 (map * 
                      (apply concat (repeat [4 5]))
                      (iterate #(/ % 2) 1)))) ; (4.0 6.5 7.5 8.125 8.375 8.53125 8.59375 8.6328125 8.6484375 8.658203 8.662109 8.664551 8.665527 8.666138 8.666382 8.666534 8.666595 8.666634 8.666649 8.666658 8.666662 8.666664 8.666666 8.666666 8.666666 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 8.666667 ...)

(defn finite-sums [seq discount]
  (reductions +
              (map * 
                   (apply concat (repeat seq))
                   (iterate #(/ % discount) 1))))

(finite-sums [1] 2)
(finite-sums (repeat 1) 2)
(finite-sums [5] 2)
(finite-sums [4 5] 2)
(finite-sums [5 4] 2)


(defn infinite-sum [seq discount]
  (float (nth (finite-sums seq discount) 1000)))

(infinite-sum [1] 2) ; 2.0
(infinite-sum [1] 3) ; 1.5
(infinite-sum [1] 4) ; 1.3333334

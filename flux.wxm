/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 12.04.0 ] */

/* [wxMaxima: title   start ]
Flux through a hemisphere
   [wxMaxima: title   end   ] */

/* [wxMaxima: comment start ]
Finding the flux of various vector fields through a hemisphere.
We'll take the hemisphere to be half of a sphere of radius a, above the x,y plane
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Load maxima's vector routines
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
load(vect);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Parametrize the hemisphere
   [wxMaxima: section end   ] */

/* [wxMaxima: comment start ]
First we'll express a point on our hemisphere in terms of a,theta,and phi, where theta is the polar angle, and phi is the azimuthal angle
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
X:[a*sin(theta)*cos(phi),a*sin(theta)*sin(phi), a*cos(theta)];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
And we need the differential surface area dS
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
dS: (X/a)*a^2*sin(theta);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Find various fluxes
   [wxMaxima: section end   ] */

/* [wxMaxima: comment start ]
Having set up the geometry, calculating fluxes is easy
   [wxMaxima: comment end   ] */

/* [wxMaxima: subsect start ]
constant vector field (alpha,beta,gamma)
   [wxMaxima: subsect end   ] */

/* [wxMaxima: input   start ] */
F:[alpha,beta,gamma];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
integrate(integrate(F.dS,phi,0,2*%pi),theta,0,%pi/2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: subsect start ]
radial field (always pushing you away from the origin, stronger the further away you are)
   [wxMaxima: subsect end   ] */

/* [wxMaxima: input   start ] */
G:X;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
integrate(integrate(G.dS,theta,0,%pi/2),phi,0,2*%pi);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: subsect start ]
inverse-square law field (gravity, electricity)
   [wxMaxima: subsect end   ] */

/* [wxMaxima: input   start ] */
G:X/(a*a*a);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
integrate(integrate(G.dS,theta,0,%pi/2),phi,0,2*%pi);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Notice that the flux is constant for these fundamental forces, as if something was flowing out from the centre.
Whatever surface you choose, if it encloses the origin, the same amount will flow through it.
   [wxMaxima: comment end   ] */

/* [wxMaxima: subsect start ]
elliptical field (lx,my,nz)
   [wxMaxima: subsect end   ] */

/* [wxMaxima: input   start ] */
G:[l*X[1],m*X[2],n*X[3]];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
integrate(integrate(G.dS,theta,0,%pi/2),phi,0,2*%pi);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
factor(%);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
We should expect that since div G is l+m+n 
the volume of hemisphere is 2/3*pi*a^3 and there's no flux through the base.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ev(express(div([l*x,m*y,n*z])),diff);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Drawing the hemisphere
   [wxMaxima: section end   ] */

/* [wxMaxima: comment start ]
If we pick a specific value of a (four, say), then we can draw the surface
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
h4:X,a=4;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
hemisphere:parametric_surface(h4[1],h4[2],h4[3],phi,0,2*%pi,theta,0,%pi/2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
wxdraw3d(surface_hide=true, hemisphere)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Calculating the vector area element
   [wxMaxima: section end   ] */

/* [wxMaxima: comment start ]
If we hadn't been able to guess the vector area element, we could have got it from the parametrization
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Take the partial derivatives with respect to the parameters
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
diff(X,theta);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
diff(X,phi);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
And take their cross product, taking care to get the right sign (I want our normals sticking out)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
dS:express(diff(X,theta)~diff(X,phi));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
We can get maxima to simplify this
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
dS:trigsimp(dS);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Notice that it's a multiple of our X vector. The normals are sticking out radially
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
dS/X;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
The a*sin(theta) part makes up for the fact that we're over-counting 
the flux through the north pole when we do our integral.
   [wxMaxima: comment end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$

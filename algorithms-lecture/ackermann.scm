(define (A x y)
  (cond ((= y 0) 0)
        ((= x 0) (* 2 y))
        ((= y 1) 2)
        (else (A (- x 1) (A x (- y 1))))))

'(define (A x y)
  (cond ((= y 0) 0)
        ((= x 0) (* 2 y))
        ((= y 1) 2)
        (else (list 'A (- x 1) (list 'A x (- y 1))))))


;; 0 2 4 6  8 10 12 14 16
;; 0 2 4 8 16 32 64
;; 0 


(A 0 0)
0

(A 0 1)
2
( A 0 2)
4
( A 0 3)
6

;; The zeroth row is doubling


(A 1 0)
0

(A 1 1)
2

(A 1 2)
(a 0 (a 1 1))
(a 0 2)
4

(A 1 3)
(A 0 (A 1 2))
(A 0 (A 0 (A 1 1)))
(A 0 (A 0 2))
(A 0 4)
8



(A 1 10)
(A 0 (A 1 9))


;; 0 2 4 6  8 10 12 14 16
;; 0 2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384 32768 65536 131072
;; 0 2 4 16 65536 
;; 0 2 4 65536 

(A 2 4)
(A 1 (A 2 3))
(A 1 (A 1 (A 2 2)))
(A 1 (A 1 (A 1 (A 2 1))))
(A 1 (A 1 (A 1 2)))
(A 1 (A 1 (A 1 2)))
(A 1 (A 1 (A 0 (A 1 1))))
(A 1 (A 1 (A 0 2)))
(A 1 (A 1 4))
(A 1 (A 0 (A 1 3)))
(A 1 (A 0 (A 0 (A 1 2))))
(A 1 (A 0 (A 0 (A 0 2))))
(A 1 (A 0 (A 0 4)))
(A 1 (A 0 8))
(A 1 16)
(A 0 (A 1 15))
(A 0 (A 0 ( A 1 14)))


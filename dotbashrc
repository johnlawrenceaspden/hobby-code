# ;; -*- mode: Shell-script; -*-
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
# commented this out because it sods everything up, but is probably important on debian, so don't copy it back to 
# home machines!
#[ -z "$PS1" ] && return

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
#    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\W\$ '
     PS1='\e[7m\w\e[0m\n\u@\h\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD/$HOME/~}\007"'
    ;;
*)
    ;;
esac

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

#if [ -f ~/.bash_aliases ]; then
#    . ~/.bash_aliases
#fi

# enable color support of ls and also add handy aliases
if [ "$TERM" != "dumb" ] && [ -x /usr/bin/dircolors ]; then
    eval "`dircolors -b`"
    alias ls='ls --color=auto'
    alias lsal='ls --color=auto -al'
    alias lsa='ls --color=auto -a'
    alias lsl='ls --color=auto -l'
#    alias dir='ls --color=auto --format=vertical'
#    alias vdir='ls --color=auto --format=long'
#    alias ll='ls --color=auto -Falh'
#    alias la='ls --color=auto -A'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
    alias cgrep='grep --color=auto --context=10'
fi

# some more ls aliases
#alias ll='ls -l'
#alias la='ls -A'
#alias l='ls -CF'

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
fi

# don't put duplicate lines in the history. See bash(1) for more options
export HISTCONTROL=ignoredups
shopt -s cmdhist                     #multiline commands are one history item
export HISTIGNORE="ls:[bf]g:exit"  #ignore ls, bg, fg & exit in history
export HISTFILESIZE=500000
export HISTSIZE=500000

#see http://www.ukuug.org/events/linux2003/papers/bash_tips/
shopt -s histappend
#PROMPT_COMMAND='history -a ; history -n' #fix new window problem: every time you get a new prompt, update and reload history file
PROMPT_COMMAND='history -a ;' #fix new window problem: just update. history -n to reload the combined history

#Remember M-. gets the arguments of previous commands

#show doc files for command
function doc {  pushd "/usr/share/doc/$1" && ls ; }
export -f doc

#function emacs #open emacs in background and disown it
#{
#  echo "emacs function backgrounds and disowns emacs-snapshot-gtk; see .bashrc"
#  command emacs-snapshot-gtk "$@" & disown
#}
#add similar entries for commonly used graphical programs



alias clj='rlwrap clojure'

#life is too short
#alias fnd='find . -iname'
function fnd
{
    echo find . -iname "$1"
    command find . -iname "$1"
}

function fndg 
{  
    command find . -name \"$1\" -type f -print0 | xargs -0 -e grep --color -nH -e "$2"
}

alias h='history 10'

PATH=$PATH:~/bin

alias cda='cd ~/hobby-code/agora'

alias unisondesktop2dellmini='unison /home/john/Desktop/unison ssh://john@dell-mini//home/john/Desktop/unison'
alias unisondesktop2mini2='unison /home/john/Desktop/unison ssh://john@mini-2//home/john/Desktop/unison'
alias unisonmini2desktop='unison /home/john/Desktop/unison ssh://john@ssh.aspden.com//home/john/Desktop/unison'
alias unisondesktop2externaldrive='unison /home/john/Desktop/unison /mnt/wdexternal/unison'
alias sw='cd ~/hobby-code && mvn -f pom.xml clojure:swank'
alias ssw='cd ~/hobby-code && mvn -f simple.pom.xml clojure:swank'
alias cgg='cd ~/hobby-code/ && git pull origin master && git gui'
alias lsrt='command ls -al --reverse --sort=time'
alias go='gnome-open'
alias ck='cd ~/pyenv/src/ckan && source ~/pyenv/bin/activate'
alias ch='cd ~/pyenv/src/HelloWorld && source ~/pyenv/bin/activate'


alias digbysocks='curl -v http://172.16.1.1:8000 -d agree=1 -d redirurl=http://www.google.com -d accept=Continue && ssh -D 9999 ssh.aspden.com'

alias mktags='find .  \( -name "*.[ch]" -or -name "*.inc" -or -name "*.s" -or -name "*.mk" \) -print | xargs etags -a'

#stuff added for solarflare build

PATH=$PATH:/home/jla/myco/chip_test/scripts
PATH=$PATH:/projects/huntington_A0/Release/ef10-tools/v1_14/bin/
export PATH

# Neil says not to do this anymore
# export KPATH=/projects/huntington_A0/Release/cosim/kernels/latest/build
export PROJ_DIR=/projects/huntington_A0/Work/$USER/hunt/lom

# solarflare productivity aliases

alias anvilicious="gnome-terminal --geometry=110x40+1200+10 --profile anvil \
--tab --title=Desktop --profile default \
--tab --title=anvil \
--tab --title=uart1 \
--tab --title=hwlog1  \
--tab --title=cosim1 \
--tab --title=uart2 \
--tab --title=hwlog2 \
--tab --title=cosim2 \
--tab --title=killer -e '/home/jla/hobby-code/screensaveridle.pl'"


alias anvilsims="gnome-terminal --geometry=88x40+1200+10 --profile anvil \
--tab --title=Desktop --profile default \
--tab --title=anvil \
--tab --title=sim1 \
--tab --title=uart1  \
--tab --title=hwlog1 \
--tab --title=verdi1 \
--tab --title=oo \
--tab --title=sim2 \
--tab --title=uart2 \
--tab --title=hwlog2 \
--tab --title=verdi2 \
--tab --title=tcsh --profile anviltcsh \
"

alias anvil4sims="gnome-terminal --geometry=88x40+1200+10 --profile anvil \
--tab --title=sim1 \
--tab --title=hwlog1 \
--tab --title=sim2 \
--tab --title=hwlog2 \
--tab --title=sim3 \
--tab --title=hwlog3 \
--tab --title=sim4 \
--tab --title=hwlog4 \
"






alias anvilcompilers="gnome-terminal --geometry=122x40+1200+10 --profile anviltcsh \
--tab --title=magicmipson  \
--tab --title=magicmipsoff \
--tab --title=magicuartoff \
--tab --title=mbistfastfuncfast \
--tab --title=mbistfastfuncslow  \
--tab --title=mbistfastfuncveryslow  \
--tab --title=serdes  \
--tab --title=spare \
"


alias cosim1="export COSIM_IDENTITY=jla && time ~/myco/chip_test/src/tools/cosim/esnap --load --passthrough ~/myco/chip_test"
alias cosim2="export COSIM_IDENTITY=jla2 && time ~/myco/chip_test/src/tools/cosim/esnap --load --passthrough ~/myco/chip_test"

alias cosim1i="export COSIM_IDENTITY=jla && time ~/myco/chip_test/src/tools/cosim/esnap --simv-args \"LOOPBACK_DEBUG=1 IPSEC_DEBUG=1\" --load --passthrough ~/myco/chip_test"
alias cosim2i="export COSIM_IDENTITY=jla2 && time ~/myco/chip_test/src/tools/cosim/esnap --simv-args \"LOOPBACK_DEBUG=1 IPSEC_DEBUG=1\" --load --passthrough ~/myco/chip_test"

alias hwlog1="reset && clear && date && ls -al /local/scratch/esnap_jla/hwlog ; tail -n 100000 -F /local/scratch/esnap_jla/hwlog"
alias hwlog2="reset && clear && date && ls -al /local/scratch/esnap_jla2/hwlog ; tail -n 100000 -F /local/scratch/esnap_jla2/hwlog"
alias hwlog3="reset && clear && date && ls -al /local/scratch/esnap_jla3/hwlog ; tail -n 100000 -F /local/scratch/esnap_jla3/hwlog"
alias hwlog4="reset && clear && date && ls -al /local/scratch/esnap_jla4/hwlog ; tail -n 100000 -F /local/scratch/esnap_jla4/hwlog"

alias uart1="reset && clear && date && ls -al /local/scratch/esnap_jla/uart0.log ; tail -n 100000 -F /local/scratch/esnap_jla/uart0.log"
alias uart2="reset && clear && date && ls -al /local/scratch/esnap_jla2/uart0.log ; tail -n 100000 -F /local/scratch/esnap_jla2/uart0.log"
alias uart3="reset && clear && date && ls -al /local/scratch/esnap_jla3/uart0.log ; tail -n 100000 -F /local/scratch/esnap_jla3/uart0.log"
alias uart4="reset && clear && date && ls -al /local/scratch/esnap_jla4/uart0.log ; tail -n 100000 -F /local/scratch/esnap_jla4/uart0.log"

alias anvkill="ssh anvil ps -ef | grep jla; ssh anvil pkill -9 -u jla ; ssh anvil ps -ef | grep jla"
alias anvcheck="ssh anvil ps -ef | grep jla"

alias vcstatuses="echo ~/myco/firmwaresrc && cd ~/myco/firmwaresrc && hg status && echo not checking outgoing ; echo ~/myco/chip_test && cd ~/myco/chip_test/ && hg status && echo not checking outgoing ; echo ~/hobby-code && cd ~/hobby-code/ && git status && git log origin/solarflare..solarflare ; echo ~/Desktop/solarflare && cd ~/Desktop/solarflare && hg status && hg outgoing ; cd /projects/huntington_A0/Work/jla/gitsvnhunt && git status && git log remotes/trunk..HEAD "

alias mcw="make -C ~/myco/firmwaresrc/ clean && make --keep-going --jobs MMAKE_LIBERAL=1 -C ~/myco/firmwaresrc/ world"


alias verdi1="tcsh -c 'cd /projects/huntington_A0/Work/jla/hunt/lom ; verdi -lib  /projects/huntington_A0/Work/jla/hunt/lom/dv/blk/farmi_lite/sim/deblib -top 'platm_tb_top' -nologo -ssf /local/scratch/esnap_jla/tb_top.fsdb -sswr ~/myco/firmwaresrc/favourite-signals.rc'"

alias verdi2="tcsh -c 'cd /projects/huntington_A0/Work/jla/hunt/lom ; verdi -lib  /projects/huntington_A0/Work/jla/hunt/lom/dv/blk/farmi_lite/sim/deblib -top 'platm_tb_top' -nologo -ssf /local/scratch/esnap_jla2/tb_top.fsdb -sswr ~/myco/firmwaresrc/favourite-signals.rc'"

alias githbc='git --git-dir=/home/jla/hobby-code/.git --work-tree=/home/jla/hobby-code'

alias hgcleanforce='hg status --ignored --unknown | awk  "( \$1 == \"?\" ) || ( \$1 == \"I\") { print \$2 }" | xargs rm -rv'
alias hgcleandryrun='hg status --ignored --unknown | awk  "( \$1 == \"?\" ) || ( \$1 == \"I\") { print \$2 }" '


function backupresults
{
    V="$(date +'%F%R')"
    I=$1
    EXT=$2
    BACKUPDIR="$HOME/esnapshots/${V}esnap_${I}_${EXT}"
    if [ -d ${BACKUPDIR} ] ; then 
      echo "collision!"
    else
      mkdir -p ${BACKUPDIR}
      cp -a /local/scratch/esnap_${I}/*  ${BACKUPDIR}
    fi
}

#alias bur1='source ~/.bashrc && backupresults jla  vanilla'
#alias bur2='source ~/.bashrc && backupresults jla2 fullyhacked'
#alias bur3='source ~/.bashrc && backupresults jla3 vanillawithfsdb'
#alias bur4='source ~/.bashrc && backupresults jla4 fullyhackedwithfsdb'




function onerunsimtorulethemall
{
    reset
    clear
    date 

    TMPFILE="$(mktemp)"
    ls -al /projects/huntington_A0/Work/jla | tee --append "${TMPFILE}"
    hg --repository ~/myco/firmwaresrc parents | tee --append "${TMPFILE}"
    hg --repository ~/myco/firmwaresrc diff | tee --append "${TMPFILE}"


    COSIM_IDENTITY="$1"
    RUN_VARIANT="$2"

    echo 'cosim identity:' "$COSIM_IDENTITY"
    echo 'run variant   :' "$RUN_VARIANT"

    export COSIM_IDENTITY

    COMMAND="time $HOME/myco/chip_test/src/tools/cosim/esnap --farmi-lite --dutcfg min"

    if   [ "$RUN_VARIANT" == 'vanilla' ] ; then 
        COMMAND="$COMMAND"
    elif [ "$RUN_VARIANT" == 'fullyhacked' ] ; then
        COMMAND="$COMMAND --lean --simv-args 'MC_TLP_HACK=1' "
    elif [ "$RUN_VARIANT" == 'vanillawithfsdb' ] ; then
        COMMAND="$COMMAND --simv-args 'FSDB=1'  "
    elif [ "$RUN_VARIANT" == 'fullyhackedwithfsdb' ] ; then
        COMMAND="$COMMAND --lean --simv-args 'MC_TLP_HACK=1 FSDB=1'"
    else
        echo "oops"
        return
    fi

    COMMAND="$COMMAND trivial"

    echo $COMMAND
    eval "$COMMAND"
    esnap_return_value=$?
    echo "return value " $esnap_return_value

    INFOFILE="/local/scratch/esnap_${COSIM_IDENTITY}/jlainfo" 
    echo "writing status info from start of run (${TMPFILE}) into scratch directory as ${INFOFILE}"
    cp "${TMPFILE}" "${INFOFILE}"

    echo "to back up these results use: backupresults ${COSIM_IDENTITY}  ${RUN_VARIANT}"
    return $esnap_return_value
}

alias sim1='source ~/.bashrc && onerunsimtorulethemall jla  vanilla'
alias sim2='source ~/.bashrc && onerunsimtorulethemall jla2 fullyhacked'
alias sim3='source ~/.bashrc && onerunsimtorulethemall jla3 vanillawithfsdb'
alias sim4='source ~/.bashrc && onerunsimtorulethemall jla4 fullyhackedwithfsdb'

alias sbsx='source ~/.bashrc && set -x'
alias ll='ls -alrt'
alias e='emacsclient -n'





function filthyhackrunsim
{
    reset
    clear
    date 
    ls -al /projects/huntington_A0/Work/jla
    hg --repository ~/myco/firmwaresrc parents
    hg --repository ~/myco/firmwaresrc diff

    echo 1 cosim identity: $1

    export COSIM_IDENTITY=$1

    COMMAND="time $HOME/myco/chip_test/src/tools/cosim/esnap --farmi-lite --dutcfg min"

    if [ $1 == 'jla' ] ; then 
        COMMAND="$COMMAND"
    elif [ $1 == 'jla2' ] ; then
        COMMAND="$COMMAND --lean --simv-args 'MC_TLP_HACK=1' "
    elif [ $1 == 'jla3' ] ; then
        COMMAND="$COMMAND --simv-args 'FSDB=1'  "
    elif [ $1 == 'jla4' ] ; then
        COMMAND="$COMMAND --lean --simv-args 'MC_TLP_HACK=1 FSDB=1'"
    else
        echo "oops"
        return
    fi

    COMMAND="$COMMAND trivial"

    echo $COMMAND
    eval "$COMMAND"
    esnap_return_value=$?
    echo "return value " $esnap_return_value
    return $esnap_return_value
}

alias fhrs1='source ~/.bashrc && filthyhackrunsim jla'
alias fhrs2='source ~/.bashrc && filthyhackrunsim jla2'
alias fhrs3='source ~/.bashrc && filthyhackrunsim jla3'
alias fhrs4='source ~/.bashrc && filthyhackrunsim jla4'


function runsim
{
    reset
    clear
    date 
    ls -al /projects/huntington_A0/Work/jla
    hg --repository ~/myco/firmwaresrc parents
    hg --repository ~/myco/firmwaresrc diff
    echo 1 cosim identity: $1
    echo 2 rtl or tlm or lean: $2
    echo 3 test to run: $3
    echo 4 mc command line: $4

    export COSIM_IDENTITY=$1 

    COMMAND="time $HOME/myco/chip_test/src/tools/cosim/esnap --dutcfg min"

    if [ $2 = 'tlm' ] ; then
        COMMAND="$COMMAND"
    elif [ $2 == 'rtl' ] ; then
        COMMAND="$COMMAND --farmi-lite"
    elif [ $2 == 'tlmlean' ] ; then
        COMMAND="$COMMAND --lean"
    elif [ $2 == 'rtllean' ] ; then
        COMMAND="$COMMAND --lean --farmi-lite"
    else
        echo "oops"
        return
    fi

    if [ -z $4 ] ; then
        COMMAND="$COMMAND -- --no-mc-line $3"
    else
        COMMAND="$COMMAND --mccmdline $4 -- --no-mc-line $3 "
    fi

    echo $COMMAND
    $COMMAND
    esnap_return_value=$?
    echo "return value " $esnap_return_value
    return $esnap_return_value
}

alias rtl1trivial='runsim jla  rtl trivial'
alias rtl2trivial='runsim jla2 rtl trivial'
alias rtl3trivial='runsim jla3 rtl trivial'
alias rtl4trivial='runsim jla4 rtl trivial'


alias tlm1trivial='runsim jla  tlm trivial'
alias tlm2trivial='runsim jla2 tlm trivial'
alias tlm3trivial='runsim jla3 tlm trivial'
alias tlm4trivial='runsim jla4 tlm trivial'

alias tlmlean1trivial='runsim jla  tlmlean  trivial'
alias tlmlean2trivial='runsim jla2 tlmlean  trivial'
alias tlmlean3trivial='runsim jla3 tlmlean  trivial'
alias tlmlean4trivial='runsim jla4 tlmlean  trivial'

alias rtllean1trivial='runsim jla  rtllean trivial'
alias rtllean2trivial='runsim jla2 rtllean trivial'
alias rtllean3trivial='runsim jla3 rtllean trivial'
alias rtllean4trivial='runsim jla4 rtllean trivial'

alias rtl1true='runsim jla  rtl  true'
alias rtl2true='runsim jla2 rtl  true'

alias tlm1true='runsim jla  tlm  true'
alias tlm2true='runsim jla2 tlm  true'

alias rtl1='rtl1true'
alias rtl2='rtl2true'

#alias hgct='hg --repository ~/myco/chip_test'
#alias hgfw='hg --repository ~/myco/firmwaresrc'
#alias hgsf='hg --repository ~/Desktop/solarflare'

#alias hgtkct='hgtk --repository ~/myco/chip_test'
#alias hgtkfw='hgtk --repository ~/myco/firmwaresrc'
#alias hgtksf='hgtk --repository ~/Desktop/solarflare'

alias cdhc='pushd ~/hobby-code'
alias cdhw='pushd /projects/huntington_A0/Work/jla'
alias cdfw='pushd ~/myco/firmwaresrc/'
alias cdct='pushd ~/myco/chip_test'
alias cdsf='pushd ~/Desktop/solarflare'

alias tagsfw='cd ~/myco/firmwaresrc/ && find .  \( -name "*.[ch]" -or -name "*.inc" -or -name "*.s" \) -print | xargs etags -a'
alias remake='ssh -X anvil "make -j -C ~/myco/firmwaresrc cosim_lean world"'
alias build_from_clean='ssh -X anvil "make -C ~/myco/firmwaresrc clean cosim_lean world"'

# end of stuff added for solarflare

; CIDER 0.8.2 (Java 1.7.0_79, Clojure 1.5.1, nREPL 0.2.6)
WARNING: The following required nREPL ops are not supported: 
apropos classpath complete eldoc info inspect-start inspect-refresh inspect-pop inspect-push inspect-reset macroexpand ns-list ns-vars resource stacktrace toggle-trace-var toggle-trace-ns undef
Please, install (or update) cider-nrepl 0.8.2 and restart CIDER
WARNING: CIDER's version (0.8.2) does not match cider-nrepl's version (not installed)
user> (- 54321 12345)
41976
user> (- 54321 (* 2 12345))
29631
user> (- 54321 (* 3 12345))
17286
user> (- 54321 (* 4 12345))
4941
user> (- 12345 4941)
7404
user> (- 12345 (* 2 4941))
2463
user> (- 4941 2463)
2478
user> (- 4941 (* 2 2463))
15
user> (- 2463 (* 130 15))
513
user> (- 2463 (* 140 15))
363
user> (- 2463 (* 160 15))
63
user> (- 2463 (* 164 15))
3
user> (- 15 (* 5 3))
0
user> (let [u 1 v -1] (+(* 76 u)(* 45 v)))
31
user> (let [u 1 v -2] (+(* 76 u)(* 45 v)))
-14
user> (let [u 2 v -2] (+(* 76 u)(* 45 v)))
62
user> (let [u 2 v -3] (+(* 76 u)(* 45 v)))
17
user> (let [u 2 v -4] (+(* 76 u)(* 45 v)))
-28
user> (let [u 3 v -4] (+(* 76 u)(* 45 v)))
48
user> (let [u 3 v -5] (+(* 76 u)(* 45 v)))
3
user> (let [u 3 v -6] (+(* 76 u)(* 45 v)))
-42
user> (let [u 4 v -6] (+(* 76 u)(* 45 v)))
34
user> (let [u 4 v -7] (+(* 76 u)(* 45 v)))
-11
user> (let [u 5 v -7] (+(* 76 u)(* 45 v)))
65
user> (let [u 5 v -8] (+(* 76 u)(* 45 v)))
20
user> (let [u 5 v -9] (+(* 76 u)(* 45 v)))
-25
user> (let [u 6 v -9] (+(* 76 u)(* 45 v)))
51
user> (let [u 6 v -10] (+(* 76 u)(* 45 v)))
6
user> (let [u 7 v -10] (+(* 76 u)(* 45 v)))
82
user> (let [u 7 v -12] (+(* 76 u)(* 45 v)))
-8
user> (let [u 8 v -12] (+(* 76 u)(* 45 v)))
68
user> (let [u 8 v -13] (+(* 76 u)(* 45 v)))
23
user> (let [u 8 v -14] (+(* 76 u)(* 45 v)))
-22
user> (let [u 9 v -14] (+(* 76 u)(* 45 v)))
54
user> (let [u 9 v -15] (+(* 76 u)(* 45 v)))
9
user> (let [u 10 v -15] (+(* 76 u)(* 45 v)))
85
user> (let [u 10 v -16] (+(* 76 u)(* 45 v)))
40
user> (let [u 10 v -17] (+(* 76 u)(* 45 v)))
-5
user> (let [u 11 v -17] (+(* 76 u)(* 45 v)))
71
user> (let [u 11 v -18] (+(* 76 u)(* 45 v)))
26
user> (let [u 11 v -19] (+(* 76 u)(* 45 v)))
-19
user> (let [u 12 v -19] (+(* 76 u)(* 45 v)))
57
user> (let [u 12 v -20] (+(* 76 u)(* 45 v)))
12
user> (let [u 13 v -20] (+(* 76 u)(* 45 v)))
88
user> (let [u 13 v -21] (+(* 76 u)(* 45 v)))
43
user> (let [u 13 v -22] (+(* 76 u)(* 45 v)))
-2
user> (let [u 16 v -27] (+(* 76 u)(* 45 v)))
1
user> (- 3381 2646)
735
user> (- 2646 735)
1911
user> (- 2646 (* 2 735))
1176
user> (- 2646 (* 3 735))
441
user> (- 735 (* 1 441))
294
user> (- 441 (* 1 294))
147
user> (- 294 (* 1 147))
147
user> (- 294 (* 2 147))
0
user> (/ 3381 147)
23
user> (/ 2646 147)
18
user> (* 18 147)
2646
user> (* 23 147)
3381
user> (let [u 1 v 1] (+ (* 23 147 u) (* 18 147 v)))
6027
user> (let [u 1 v -1] (+ (* 23 147 u) (* 18 147 v)))
735
user> (let [u 1 v -1] (* 147 (+ (* 23 u) (* 18 v))))
735
user> (defn gcd [a b] (cond (< a b) (recur b a) (= b 0) a :else (recur (- a b) b)))
#'user/gcd
user> (gcd 3381 2646)
147
user> (defn gcd [a b] (print a b) (cond (< a b) (recur b a) (= b 0) a :else (recur (- a b) b)))
#'user/gcd
user> (gcd 3381 2646)
3381 2646735 26462646 7351911 7351176 735441 735735 441294 441441 294147 294294 147147 1470 147147 0
147
user> (defn gcd [a b] (print a b "-") (cond (< a b) (recur b a) (= b 0) a :else (recur (- a b) b)))
#'user/gcd
user> (gcd 3381 2646)
3381 2646 -735 2646 -2646 735 -1911 735 -1176 735 -441 735 -735 441 -294 441 -441 294 -147 294 -294 147 -147 147 -0 147 -147 0 -
147
user> (defn gcd [a b] (print a b "-> ") (cond (< a b) (recur b a) (= b 0) a :else (recur (- a b) b)))
#'user/gcd
user> (gcd 3381 2646)
3381 2646 -> 735 2646 -> 2646 735 -> 1911 735 -> 1176 735 -> 441 735 -> 735 441 -> 294 441 -> 441 294 -> 147 294 -> 294 147 -> 147 147 -> 0 147 -> 147 0 -> 
147
user> (defn gcd [a b] (print a b "-> ") (cond (= a b) a (< a b) (recur a (- b a)) :else (recur (- a b) b)))
#'user/gcd
user> (gcd 3381 2646)
3381 2646 -> 735 2646 -> 735 1911 -> 735 1176 -> 735 441 -> 294 441 -> 294 147 -> 147 147 -> 
147
user> (gcd 12345 54321)
12345 54321 -> 12345 41976 -> 12345 29631 -> 12345 17286 -> 12345 4941 -> 7404 4941 -> 2463 4941 -> 2463 2478 -> 2463 15 -> 2448 15 -> 2433 15 -> 2418 15 -> 2403 15 -> 2388 15 -> 2373 15 -> 2358 15 -> 2343 15 -> 2328 15 -> 2313 15 -> 2298 15 -> 2283 15 -> 2268 15 -> 2253 15 -> 2238 15 -> 2223 15 -> 2208 15 -> 2193 15 -> 2178 15 -> 2163 15 -> 2148 15 -> 2133 15 -> 2118 15 -> 2103 15 -> 2088 15 -> 2073 15 -> 2058 15 -> 2043 15 -> 2028 15 -> 2013 15 -> 1998 15 -> 1983 15 -> 1968 15 -> 1953 15 -> 1938 15 -> 1923 15 -> 1908 15 -> 1893 15 -> 1878 15 -> 1863 15 -> 1848 15 -> 1833 15 -> 1818 15 -> 1803 15 -> 1788 15 -> 1773 15 -> 1758 15 -> 1743 15 -> 1728 15 -> 1713 15 -> 1698 15 -> 1683 15 -> 1668 15 -> 1653 15 -> 1638 15 -> 1623 15 -> 1608 15 -> 1593 15 -> 1578 15 -> 1563 15 -> 1548 15 -> 1533 15 -> 1518 15 -> 1503 15 -> 1488 15 -> 1473 15 -> 1458 15 -> 1443 15 -> 1428 15 -> 1413 15 -> 1398 15 -> 1383 15 -> 1368 15 -> 1353 15 -> 1338 15 -> 1323 15 -> 1308 15 -> 1293 15 -> 1278 15 -> 1263 15 -> 1248 15 -> 1233 15 -> 1218 15 -> 1203 15 -> 1188 15 -> 1173 15 -> 1158 15 -> 1143 15 -> 1128 15 -> 1113 15 -> 1098 15 -> 1083 15 -> 1068 15 -> 1053 15 -> 1038 15 -> 1023 15 -> 1008 15 -> 993 15 -> 978 15 -> 963 15 -> 948 15 -> 933 15 -> 918 15 -> 903 15 -> 888 15 -> 873 15 -> 858 15 -> 843 15 -> 828 15 -> 813 15 -> 798 15 -> 783 15 -> 768 15 -> 753 15 -> 738 15 -> 723 15 -> 708 15 -> 693 15 -> 678 15 -> 663 15 -> 648 15 -> 633 15 -> 618 15 -> 603 15 -> 588 15 -> 573 15 -> 558 15 -> 543 15 -> 528 15 -> 513 15 -> 498 15 -> 483 15 -> 468 15 -> 453 15 -> 438 15 -> 423 15 -> 408 15 -> 393 15 -> 378 15 -> 363 15 -> 348 15 -> 333 15 -> 318 15 -> 303 15 -> 288 15 -> 273 15 -> 258 15 -> 243 15 -> 228 15 -> 213 15 -> 198 15 -> 183 15 -> 168 15 -> 153 15 -> 138 15 -> 123 15 -> 108 15 -> 93 15 -> 78 15 -> 63 15 -> 48 15 -> 33 15 -> 18 15 -> 3 15 -> 3 12 -> 3 9 -> 3 6 -> 3 3 -> 
3
user> (defn gcd [a b] (print a b "-> ") (cond (= a 0) b (= b 0) a (< a b) (recur a (- b a)) :else (recur (- a b) b)))
#'user/gcd
user> (gcd 12345 54321)
12345 54321 -> 12345 41976 -> 12345 29631 -> 12345 17286 -> 12345 4941 -> 7404 4941 -> 2463 4941 -> 2463 2478 -> 2463 15 -> 2448 15 -> 2433 15 -> 2418 15 -> 2403 15 -> 2388 15 -> 2373 15 -> 2358 15 -> 2343 15 -> 2328 15 -> 2313 15 -> 2298 15 -> 2283 15 -> 2268 15 -> 2253 15 -> 2238 15 -> 2223 15 -> 2208 15 -> 2193 15 -> 2178 15 -> 2163 15 -> 2148 15 -> 2133 15 -> 2118 15 -> 2103 15 -> 2088 15 -> 2073 15 -> 2058 15 -> 2043 15 -> 2028 15 -> 2013 15 -> 1998 15 -> 1983 15 -> 1968 15 -> 1953 15 -> 1938 15 -> 1923 15 -> 1908 15 -> 1893 15 -> 1878 15 -> 1863 15 -> 1848 15 -> 1833 15 -> 1818 15 -> 1803 15 -> 1788 15 -> 1773 15 -> 1758 15 -> 1743 15 -> 1728 15 -> 1713 15 -> 1698 15 -> 1683 15 -> 1668 15 -> 1653 15 -> 1638 15 -> 1623 15 -> 1608 15 -> 1593 15 -> 1578 15 -> 1563 15 -> 1548 15 -> 1533 15 -> 1518 15 -> 1503 15 -> 1488 15 -> 1473 15 -> 1458 15 -> 1443 15 -> 1428 15 -> 1413 15 -> 1398 15 -> 1383 15 -> 1368 15 -> 1353 15 -> 1338 15 -> 1323 15 -> 1308 15 -> 1293 15 -> 1278 15 -> 1263 15 -> 1248 15 -> 1233 15 -> 1218 15 -> 1203 15 -> 1188 15 -> 1173 15 -> 1158 15 -> 1143 15 -> 1128 15 -> 1113 15 -> 1098 15 -> 1083 15 -> 1068 15 -> 1053 15 -> 1038 15 -> 1023 15 -> 1008 15 -> 993 15 -> 978 15 -> 963 15 -> 948 15 -> 933 15 -> 918 15 -> 903 15 -> 888 15 -> 873 15 -> 858 15 -> 843 15 -> 828 15 -> 813 15 -> 798 15 -> 783 15 -> 768 15 -> 753 15 -> 738 15 -> 723 15 -> 708 15 -> 693 15 -> 678 15 -> 663 15 -> 648 15 -> 633 15 -> 618 15 -> 603 15 -> 588 15 -> 573 15 -> 558 15 -> 543 15 -> 528 15 -> 513 15 -> 498 15 -> 483 15 -> 468 15 -> 453 15 -> 438 15 -> 423 15 -> 408 15 -> 393 15 -> 378 15 -> 363 15 -> 348 15 -> 333 15 -> 318 15 -> 303 15 -> 288 15 -> 273 15 -> 258 15 -> 243 15 -> 228 15 -> 213 15 -> 198 15 -> 183 15 -> 168 15 -> 153 15 -> 138 15 -> 123 15 -> 108 15 -> 93 15 -> 78 15 -> 63 15 -> 48 15 -> 33 15 -> 18 15 -> 3 15 -> 3 12 -> 3 9 -> 3 6 -> 3 3 -> 0 3 -> 
3
user> (quot 15 4)
3
user> (rem 15 4)
3
user> (defn gcd [a b] (print a b "-> ") (cond (= a 0) b (= b 0) a (< a b) (recur a (rem b a)) :else (recur (rem a b) b)))
#'user/gcd
user> (gcd 12345 54321)
12345 54321 -> 12345 4941 -> 2463 4941 -> 2463 15 -> 3 15 -> 3 0 -> 
3
user> 
